#!/bin/bash
DEBUG=False
if [ $# -ge 1 ]
then
	DEBUG=True
fi
function do_spec {
file=spec-$1-$2--$3.csv
if [ ! -e $file ]
then
	return 1
fi
tail -3 spec-$1-$2--$3.csv| awk '
BEGIN {FS=", *"
        }
        
        
/./ {
      freq = $7
      bw = $8
      for (i = 9; i < 9+2048; i++)
      {
          spec[i-9] += 0.0+$i
          spec_cnt[i-9] += 1.0
      }
    }
END {
      freq = freq - bw/2.0
      step = bw/2048.0
      for (i = 0; i < 2048; i++)
      {
          printf ("%.5f %.4f\n", freq/1.0e6, spec[i]/spec_cnt[i])
          freq += step
    }
    }
'  >current-$1-$2.dat
tail -1 spec-$1-$2--$3.csv|awk '
BEGIN {FS=", *"
        }
        
/./ {printf ("%.4f\n", $7/1.0e6)}' >current-$2-freq.dat
tail -1 spec-$1-$2--$3.csv|awk '
BEGIN {FS=", *"
        }
        
/./ {printf ("%.4f\n", $8/1.0e3)}' >current-$2-bw.dat
return 0
}

function do_skytemp {
	if [ ! -e rio-$1-$2.csv ]
	then
		return 1
	fi
	tail -3600 rio-$1-$2.csv|awk 'BEGIN {FS=", *"
		gndx = 0
		dndx = 0
	}
/./ {
	 secs = $4 * 3600
     secs += $5 * 60
     secs += $6

     temp_array[dndx] += $13
     dcnt[dndx] += 1
     gndx += 1
     
     if (gndx >= GRANULARITY)
     {
		dndx += 1
		gndx = 0
     }
 }
END {hindx = 0
	tndx=0
	 for (i = dndx-1; i >=0; i--)
     {
         if (dcnt[i] >= 1)
	 {
         printf ("%.5f %e\n", tndx/3600.0, temp_array[i]/dcnt[i])
         tndx += GRANULARITY
     }
     }
     }' GRANULARITY=10 >current-skytemp-$1.dat
	 START_LMST=`tail -1 rio-$1-$2.csv|awk '
BEGIN {FS=", *"}
/./ {hour=$4*1.0
	 minute=$5
	 second=$6
	 printf ("%02d:%02d:%02d", hour, minute, second)
 }
'`
	return 0
}
if [ -e /mnt/riometer_data ]
then
	cd /mnt/riometer_data
fi
date=`date -u +%Y%m%d`
if [ $DEBUG = True ]
then
	date=20190227
fi
for chan in 0 1 2
do
	do_spec peak $chan $date
	do_spec excised $chan $date
	if [ -e current-peak-$chan.dat ]
	then
		cp current-peak-$chan.dat plt1.dat
		mv current-peak-$chan.dat plots
		cp current-excised-$chan.dat plt2.dat
		mv current-excised-$chan.dat plots
		FREQ=`cat current-$chan-freq.dat`
		BW=`cat current-$chan-bw.dat`
		pltdate=`date -u +%Y/%m/%d-%H:%M:%S`
		gnuplot <<!EOF!
set grid
set title "$pltdate: Channel $chan: Fc=$FREQ MHz, Bw=$BW kHz"
set terminal png large size 900,600
set output 'current-tmp.png'
set xlabel 'Frequency (MHz)'
set ylabel 'Rel. Power (dB)'
plot 'plt1.dat' with lines title "Peak Hold", 'plt2.dat' with lines title "Excised"
!EOF!
		mv current-tmp.png plots/current-spec-$chan.png
		rm -f plt1.dat plt2.dat
	fi
done
if [ $DEBUG = True ]
then
	date=20190303
fi
for chan in 0 1 2
do
	case $chan in
	0)
		MAX=15000
		;;
	1)
		MAX=7000
		;;
	2)
		MAX=150000
		;;
	esac
	do_skytemp $chan $date
	if [ -e current-skytemp-$chan.dat ]
	then
		cp current-skytemp-$chan.dat plt1.dat
		mv current-skytemp-$chan.dat plots
		FREQ=`cat current-$chan-freq.dat`
		BW=`cat current-$chan-bw.dat`
		pltdate=`date -u +%Y/%m/%d-%H:%M:%S`
		gnuplot <<!EOF!
set grid
set title "$pltdate: Apparent Sky Temp--Chan $chan: Fc=$FREQ MHz, Bw=$BW kHz"
set terminal png large size 900,600
set output 'current-tmp.png'
set xlabel 'Time (Hours LMST from $START_LMST)'
set xtics 0.1
set ylabel 'Apparent Noise Temp(K)'
set yrange [0:$MAX]
plot 'plt1.dat' with lines title "Sky Temp(K)"
!EOF!
		rm -f plt1.dat
		mv current-tmp.png plots/current-skytemp-$chan.png
	fi
done

	
